@model CardDTO

@{
    ViewData["Title"] = "Delete";
}
<div id="cards-container" class="d-flex justify-content-center align-items-center vh-100 flex-column">
    <div class="card-container" onclick="flipCard(this)">
        <div class="card-inner">
            <div class="card-front d-flex flex-column">
                @if (!string.IsNullOrEmpty(Model.FrontPictureUrl))
                {
                    <img src="~/uploads/@Model.FrontPictureUrl" class="card-img" loading="lazy">
                }
                <div class="card-text-box">
                    <p class="card-text">@Model.FrontText</p>
                </div>
            </div>

            <div class="card-back d-flex flex-column">
                @if (!string.IsNullOrEmpty(Model.BackPictureUrl))
                {
                    <img src="~/uploads/@Model.BackPictureUrl" class="card-img" loading="lazy">
                }
                <div class="card-text-box">
                    <p class="card-text">@Model.BackText</p>
                </div>
            </div>
        </div>
    </div>
    <div>
        <form class="gap-3" asp-action="Delete">
            <input type="hidden" asp-for="Id" />
            <input type="submit" value="Delete" class="btn btn-danger" />
            <a class="btn btn-light" asp-controller="Decks" asp-action="Details" asp-route-id="@Model.DeckId">Back to Deck</a>
        </form>
    </div>
</div>

